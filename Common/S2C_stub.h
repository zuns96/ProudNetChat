  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "S2C_common.h"

     
namespace S2C {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool Recv_Rpy_Login ( ::Proud::HostID, ::Proud::RmiContext& , const Rpy_Login & )		{ 
			return false;
		} 

#define DECRMI_S2C_Recv_Rpy_Login bool Recv_Rpy_Login ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_Login & rpy) PN_OVERRIDE

#define DEFRMI_S2C_Recv_Rpy_Login(DerivedClass) bool DerivedClass::Recv_Rpy_Login ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_Login & rpy)
#define CALL_S2C_Recv_Rpy_Login Recv_Rpy_Login ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_Login & rpy)
#define PARAM_S2C_Recv_Rpy_Login ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_Login & rpy)
               
		virtual bool Recv_Rpy_Chat ( ::Proud::HostID, ::Proud::RmiContext& , const Rpy_Chat & )		{ 
			return false;
		} 

#define DECRMI_S2C_Recv_Rpy_Chat bool Recv_Rpy_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_Chat & rpy) PN_OVERRIDE

#define DEFRMI_S2C_Recv_Rpy_Chat(DerivedClass) bool DerivedClass::Recv_Rpy_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_Chat & rpy)
#define CALL_S2C_Recv_Rpy_Chat Recv_Rpy_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_Chat & rpy)
#define PARAM_S2C_Recv_Rpy_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_Chat & rpy)
               
		virtual bool Recv_Rpy_System_Chat ( ::Proud::HostID, ::Proud::RmiContext& , const Rpy_System_Chat & )		{ 
			return false;
		} 

#define DECRMI_S2C_Recv_Rpy_System_Chat bool Recv_Rpy_System_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_System_Chat & rpy) PN_OVERRIDE

#define DEFRMI_S2C_Recv_Rpy_System_Chat(DerivedClass) bool DerivedClass::Recv_Rpy_System_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_System_Chat & rpy)
#define CALL_S2C_Recv_Rpy_System_Chat Recv_Rpy_System_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_System_Chat & rpy)
#define PARAM_S2C_Recv_Rpy_System_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_System_Chat & rpy)
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_Recv_Rpy_Login;
		static const PNTCHAR* RmiName_Recv_Rpy_Chat;
		static const PNTCHAR* RmiName_Recv_Rpy_System_Chat;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Rpy_Login & ) > Recv_Rpy_Login_Function;
		virtual bool Recv_Rpy_Login ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_Login & rpy) 
		{ 
			if (Recv_Rpy_Login_Function==nullptr) 
				return true; 
			return Recv_Rpy_Login_Function(remote,rmiContext, rpy); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Rpy_Chat & ) > Recv_Rpy_Chat_Function;
		virtual bool Recv_Rpy_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_Chat & rpy) 
		{ 
			if (Recv_Rpy_Chat_Function==nullptr) 
				return true; 
			return Recv_Rpy_Chat_Function(remote,rmiContext, rpy); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Rpy_System_Chat & ) > Recv_Rpy_System_Chat_Function;
		virtual bool Recv_Rpy_System_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Rpy_System_Chat & rpy) 
		{ 
			if (Recv_Rpy_System_Chat_Function==nullptr) 
				return true; 
			return Recv_Rpy_System_Chat_Function(remote,rmiContext, rpy); 
		}

	};
#endif

}


