  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "C2S_common.h"

     
namespace C2S {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool Send_Req_Login ( ::Proud::HostID, ::Proud::RmiContext& , const Req_Login & )		{ 
			return false;
		} 

#define DECRMI_C2S_Send_Req_Login bool Send_Req_Login ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Req_Login & req) PN_OVERRIDE

#define DEFRMI_C2S_Send_Req_Login(DerivedClass) bool DerivedClass::Send_Req_Login ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Req_Login & req)
#define CALL_C2S_Send_Req_Login Send_Req_Login ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Req_Login & req)
#define PARAM_C2S_Send_Req_Login ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Req_Login & req)
               
		virtual bool Send_Req_Chat ( ::Proud::HostID, ::Proud::RmiContext& , const Req_Chat & )		{ 
			return false;
		} 

#define DECRMI_C2S_Send_Req_Chat bool Send_Req_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Req_Chat & req) PN_OVERRIDE

#define DEFRMI_C2S_Send_Req_Chat(DerivedClass) bool DerivedClass::Send_Req_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Req_Chat & req)
#define CALL_C2S_Send_Req_Chat Send_Req_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Req_Chat & req)
#define PARAM_C2S_Send_Req_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Req_Chat & req)
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_Send_Req_Login;
		static const PNTCHAR* RmiName_Send_Req_Chat;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Req_Login & ) > Send_Req_Login_Function;
		virtual bool Send_Req_Login ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Req_Login & req) 
		{ 
			if (Send_Req_Login_Function==nullptr) 
				return true; 
			return Send_Req_Login_Function(remote,rmiContext, req); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Req_Chat & ) > Send_Req_Chat_Function;
		virtual bool Send_Req_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Req_Chat & req) 
		{ 
			if (Send_Req_Chat_Function==nullptr) 
				return true; 
			return Send_Req_Chat_Function(remote,rmiContext, req); 
		}

	};
#endif

}


